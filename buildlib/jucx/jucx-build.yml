parameters:
  temp_cfg: $(System.DefaultWorkingDirectory)/bindings/java/src/main/native/build-java/tmp-settings.xml
  gpg_dir: $(System.DefaultWorkingDirectory)/bindings/java/src/main/native/build-java/gpg
  name:
  container:  
  demands: []

jobs:
  - job: jucx_build_${{ parameters.name }}
    displayName: JUCX build ${{ parameters.name }}

    # we need to use lowest version for compatibility
    container: ${{ parameters.container }}    
    pool:
      name: MLNX
      demands: ${{ parameters.demands }}

    steps:
      - checkout: self
        clean: true
        fetchDepth: 100
        path: "we/need/to/go/deeper"
        # ^workaround agent issue with container in root path

      - bash: |
          set -eEx
          gcc --version
          ./autogen.sh
          ./contrib/configure-release --with-java
        displayName: Configure

      - bash: |
          set -eEx
          # make -s -j`nproc`
          ls -l $(Build.Repository.LocalPath)/bindings/java/resources/libjucx.so  # TMP DEBUG

          mv $(Build.Repository.LocalPath)/bindings/java/resources/libjucx.so \
             $(Build.Repository.LocalPath)/bindings/java/resources/libjucx_${{ parameters.name }}.so
        displayName: Build ucx

        #  EACCES: permission denied, mkdir 
      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.Repository.LocalPath)'
          contents: |
            bindings/java/resources/libjucx_${{ parameters.name }}.so
          targetFolder: $(Build.ArtifactStagingDirectory)

      - bash: |
          set -eEx
          whoami
          dirname $(Build.ArtifactStagingDirectory) || true
          mkdir $(Build.ArtifactStagingDirectory)
          ls -l $(Build.ArtifactStagingDirectory)
          # cp $(Build.Repository.LocalPath)/bindings/java/resources/libjucx_${{ parameters.name }}.so (Build.ArtifactStagingDirectory)
        displayName: workaround for failed copy task

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: libjucx_${{ parameters.name }}.so
        displayName: Midterm artifact push
